plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.diffplug.spotless'
    id "io.gitlab.arturbosch.detekt"
    id 'org.sonarqube'
}

android {
    compileSdk buildVersions.compileSdk

    defaultConfig {
        applicationId "com.android.erkumardevender"
        minSdkVersion buildVersions.minSdk
        targetSdkVersion buildVersions.targetSdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // Required when setting minSdkVersion to 20 or lower
        multiDexEnabled true
        unitTests.returnDefaultValues = true
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }


    buildTypes {
        testCoverageEnabled true

        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix '-DEBUG'
            try {
                buildConfigField("String", "REMOTE_API_BASE_URL", "\"${getLocalProperty("mock.baseUrl")}\"")
            } catch (ignored) {
                throw new InvalidUserDataException("You should define 'api key' in local.properties.")
            }
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            try {
                buildConfigField("String", "REMOTE_API_BASE_URL", "\"${getLocalProperty("mock.baseUrl")}\"")
            } catch (ignored) {
                throw new InvalidUserDataException("You should define 'api key' in local.properties.")
            }
        }
    }
    compileOptions {

        // Flag to enable support for the new language APIs
        coreLibraryDesugaringEnabled true
        // Sets Java compatibility to Java 8
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8


        //lint
        lintOptions {

            checkAllWarnings true
            warningsAsErrors true

            baseline(file("lint-baseline.xml"))
        }
    }

    // For Kotlin projects
    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildFeatures {
        dataBinding true
    }
}
def getLocalProperty(String propertyName) {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    String property = properties.getProperty(propertyName)
    if (property == null) {
        throw new Exception("Not defined property")
    }
    return property
}


task showReport(type:Exec) {
    shouldRunAfter("detekt")
    workingDir './build/reports/detekt'
    commandLine 'cmd', '/c', 'start detekt.html'
}

sonarqube {
    properties {
        property "sonar.projectName", "sample-project"
        property "sonar.projectKey", "sample-project"
        property "sonar.sources", "src"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.tests", ["src/test/java"]
        property "sonar.test.inclusions", "**/*Test*/**"
        property "sonar.exclusions", '**/.gradle/**,' +
                "**/androidTest/**," +
                "**/R.class," +
                "**/BuildConfig.*," +
                "**/Manifest*.*," +
                "**/android/databinding/*," +
                "**/androidx/databinding/*," +
                "**/*MapperImpl*.*," +
                "**/BuildConfig.*," +
                "**/Manifest*.*," +
                "**/google-services.json"
    }
}

dependencies {

    //support
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'

    //compat libs
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'

    //testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    //androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    //kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation 'androidx.core:core-ktx:1.7.0'

    // Activity KTX for viewModels()
    implementation "androidx.activity:activity-ktx:1.4.0"
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:2.4.1")

    //di
    implementation "com.google.dagger:hilt-android:2.38.1"
    kapt "com.google.dagger:hilt-compiler:2.40"

    //logging
    implementation 'com.jakewharton.timber:timber:5.0.1'

    //navigation component
        def nav_version = "2.4.2"

        // Java language implementation
        implementation "androidx.navigation:navigation-fragment:$nav_version"
        implementation "androidx.navigation:navigation-ui:$nav_version"

        // Kotlin
        implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
        implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

        // Feature module Support
        implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"

        // Testing Navigation
        androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"

        // Jetpack Compose Integration
        //implementation "androidx.navigation:navigation-compose:$nav_version"


    //remote network
    def retrofitVersion="2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"

    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.0"

    //desugaring
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'

}
